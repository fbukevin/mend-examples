version: "2"
services:

  remediate:
    build: 
      context: ${BASE_DIR}/${VERSION}/wss-remediate/docker
    image: wss-remediate:${REMEDIATE}
    container_name: remediate-server
    env_file:
      - .env
    ports:
      - "8582:8080"
    volumes: 
      - ${BASE_DIR}/prop.json:/etc/usr/local/whitesource/conf/prop.json
    depends_on:
      graylog:
        condition: "service_healthy"
    restart: always
    logging:
      driver: syslog
      options:
        syslog-address: "tcp://0.0.0.0:5140"
        tag: "remediate-server"

  app:
    build: 
      context: ${BASE_DIR}/${VERSION}/wss-${SCM}-app/docker
    image: wss-${SCM}-app:${CONTROLLER}
    container_name: wss-${SCM}-app
    env_file:
      - .env
    ports:
      - "9494:9494"
      - "5678:5678"
    volumes: 
      - ${BASE_DIR}/:/etc/usr/local/whitesource/conf/
    depends_on:
      graylog:
        condition: "service_healthy"
      remediate:
        condition: "service_started"
    restart: always
    logging:
        driver: syslog
        options:
          syslog-address: "tcp://0.0.0.0:5140"
          tag: wss-${SCM}-app
    
  scanner:
    build: 
      context: ${BASE_DIR}/${VERSION}/wss-scanner/docker
    image: wss-scanner:${SCANNER}
    container_name: wss-scanner
    env_file:
      - .env
    ports:
      - "9393:9393"
    volumes: 
      - ${BASE_DIR}/:/etc/usr/local/whitesource/conf/
    depends_on:
      graylog:
        condition: "service_healthy"
      remediate:
        condition: "service_started"
    restart: always
    logging:
      driver: syslog
      options:
        syslog-address: "tcp://0.0.0.0:5140"
        tag: "wss-scanner"

  mongodb:
    image: "mongo:5.0"
    hostname: "mongodb"
    volumes:
      - "mongodb_data:/data/db"
    restart: "on-failure"

  datanode:
    image: "graylog/graylog-datanode:5.2"
    hostname: "datanode-1"
    environment:
      GRAYLOG_DATANODE_NODE_ID_FILE: "/var/lib/graylog-datanode/node-id"
      GRAYLOG_DATANODE_PASSWORD_SECRET: "${GRAYLOG_PASSWORD_SECRET}"
      GRAYLOG_DATANODE_ROOT_PASSWORD_SHA2: "${GRAYLOG_ROOT_PASSWORD_SHA2}"
      GRAYLOG_DATANODE_MONGODB_URI: "mongodb://mongodb:27017/graylog"
      GRAYLOG_DATANODE_DATA_DIR: "/var/lib/graylog-datanode"
    ulimits:
      memlock:
        hard: -1
        soft: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - "8999:8999/tcp" #DataNode API
      - "9200:9200/tcp"
      - "9300:9300/tcp"
    volumes:
      - "graylog-datanode:/var/lib/graylog-datanode"
    restart: "on-failure"
    depends_on:
      - "mongodb"

  graylog:
    image: "graylog/graylog:5.2"
    hostname: "graylog-server"
    depends_on:
      mongodb:
        condition: "service_started"
    entrypoint: "/usr/bin/tini -- wait-for-it datanode:9200 -- /docker-entrypoint.sh"
    environment:
      GRAYLOG_NODE_ID_FILE: "/usr/share/graylog/data/data/node_id"
      GRAYLOG_PASSWORD_SECRET: "${GRAYLOG_PASSWORD_SECRET}"
      GRAYLOG_ROOT_PASSWORD_SHA2: "${GRAYLOG_ROOT_PASSWORD_SHA2}"
      GRAYLOG_HTTP_BIND_ADDRESS: "0.0.0.0:9000"
      GRAYLOG_HTTP_EXTERNAL_URI: "http://localhost:9000/"
      GRAYLOG_MONGODB_URI: "mongodb://mongodb:27017/graylog"
      GRAYLOG_MESSAGE_JOURNAL_DIR: "journal"
      GRAYLOG_CONTENT_PACKS_AUTO_INSTALL: "mend-graylog-content-pack.json"
      GRAYLOG_CONTENT_PACKS_DIR: "data/contentpacks"
      GRAYLOG_CONTENT_PACKS_LOADER_ENABLED: "true"
    ports:
      - "5140:5140/udp" #Syslog
      - "5140:5140/tcp" #Syslog
      - "9000:9000/tcp" #Server API
    volumes:
      - "graylog_data:/usr/share/graylog/data/data"
      - "graylog_config:/usr/share/graylog/data/config"
      - "graylog_journal:/usr/share/graylog/data/journal"
    healthcheck:
      test: "bash -c 'printf \"GET / HTTP/1.1\n\n\" > /dev/tcp/0.0.0.0/5140; exit $?;'"
      interval: 30s
      timeout: 5s
      retries: 10
    restart: "on-failure"

volumes:
  mongodb_data: 
  graylog-datanode: 
  graylog_data: 
  graylog_journal: 
  graylog_config:
        
networks: 
  default:
    name: ${SCM}_bridge
    external: false
