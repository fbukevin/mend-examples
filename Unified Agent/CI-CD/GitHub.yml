name: Mend Unified Agent Release Scan

on:
  push:
     branches:
     - '**release**'

jobs:
  mendscan:
    env:
      WS_APIKEY: ${{secrets.PROD_APIKEY}}
      WS_USERKEY: ${{secrets.PROD_USERKEY}}
      WS_WSS_URL: https://saas.mend.io/agent
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
## Maven example - replace with your build steps
#
#    - name: Build with Maven
#      run: mvn clean install -DskipTests=true
##
# The Unified Agent scan should be called AFTER a package manager build step such as "mvn clean install -DskipTests=true" or "npm install --only=prod"
    - name: Mend Unified Agent Scan
      env:
        WS_PRODUCTNAME: ${{github.event.repository.name}}
        WS_PROJECTNAME: ${{github.event.repository.name}}_${{github.ref_name}}
        WS_GENERATEPROJECTDETAILSJSON: true
      run: |
        echo Downloading Mend Unified Agent
        curl -LJO https://unified-agent.s3.amazonaws.com/wss-unified-agent.jar
        if [[ "$(curl -sL https://unified-agent.s3.amazonaws.com/wss-unified-agent.jar.sha256)" != "$(sha256sum wss-unified-agent.jar)" ]] ; then
          echo "Integrity Check Failed"
        else
          echo "Integrity Check Passed"
          echo Starting Unified Agent Scan
          java -jar wss-unified-agent.jar
        fi
## (Optional) Download reports and save as pipeline artifact
#    - name: Check Project State
#      run: |
#        curl -LJO https://raw.githubusercontent.com/mend-toolkit/mend-examples/main/Scripts/Mend%20SCA/check-project-state.sh
#        chmod +x check-project-state.sh && ./check-project-state.sh
#    - name: Mend Report Generation
#      run: |
#        export WS_PROJECTTOKEN=$(jq -r '.projects | .[] | .projectToken' ./whitesource/scanProjectDetails.json)
#        export WS_URL=$(echo $WS_WSS_URL | awk -F "agent" '{print $1}')
#        curl -o ./whitesource/riskreport.pdf -X POST "${WS_URL}/api/v1.3" -H "Content-Type: application/json"  -d '{"requestType":"getProjectRiskReport","userKey":"'${WS_USERKEY}'","projectToken":"'${WS_PROJECTTOKEN}'"}'
#        curl -o ./whitesource/inventoryreport.xlsx -X POST "${WS_URL}/api/v1.3" -H "Content-Type: application/json"  -d '{"requestType":"getProjectInventoryReport","userKey":"'${WS_USERKEY}'","projectToken":"'${WS_PROJECTTOKEN}'"}'
#        curl -o ./whitesource/duediligencereport.xlsx -X POST "${WS_URL}/api/v1.3" -H "Content-Type: application/json"  -d '{"requestType":"getProjectDueDiligenceReport","userKey":"'${WS_USERKEY}'","projectToken":"'${WS_PROJECTTOKEN}'"}'

    - name: 'Upload WhiteSource folder'
      uses: actions/upload-artifact@v2
      with:
        name: Mend
        path: whitesource
        retention-days: 14
    - name: 'Upload Mend folder if failure'
      uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: Mend
        path: whitesource
        retention-days: 14
