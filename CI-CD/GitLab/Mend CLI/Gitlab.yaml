# ******** Mend Unified CLI Template for Gitlab CI ********
#
# You may wish to alter this file to override the build tool and Mend scanning technologies.
#
# For more configuration options, please check the technical documentation portal:
# ðŸ“š https://docs.mend.io/bundle/integrations/page/scan_with_the_mend_cli.html
#
# ******** Description ********
# mend dep will automatically use package managers and file system scanning to detect open source components.
# mend code will automatically detect languages and frameworks used in your projects to scan for code weaknesses.

# If you are NOT using a service user, and have multiple organizations, don't forget to call the scope -s parameter to set the organization


default:
  image: maven:3.8-openjdk-11

stages:
  - build
  - scan

## Maven example - replace with your builds steps
maven_build:
  image: maven:3.8.4-eclipse-temurin-17-alpine
  stage: build
  script: "mvn clean install -DskipTests"
  
cache:
  key: "cache-$MVN_PKG-$CI_PIPELINE_ID"
  paths:
  - ${CI_PROJECT_DIR}/
## end maven build example

# The mend dep scan should be called AFTER a package manager build step such as "mvn clean install -DskipTests=true" or "npm install --only=prod"

mend_cli_scan:
  stage: scan
  variables:
    ### Authentication Variables ###
    MEND_EMAIL: $MEND_EMAIL
    MEND_USER_KEY: $MEND_USER_KEY
    MEND_URL: "https://saas.mend.io"

  script: |
    echo Downloading Mend CLI
    curl https://downloads.mend.io/cli/linux_amd64/mend -o /usr/local/bin/mend && chmod +x /usr/local/bin/mend
    echo Run Mend dependencies scan
    mend dep -u
    echo Run Mend code scan
    mend code