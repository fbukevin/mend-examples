name: 'mend-ua-azdo-dotnet-sbom'

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: Release
  WS_WSS_URL: https://saas.mend.io/agent
  WS_URL: https://saas.mend.io
  WS_PRODUCTNAME: AZ_$(System.TeamProject)
  WS_PROJECTNAME: $(Build.Repository.Name)_$(Build.SourceBranchName)
  WS_GENERATEPROJECTDETAILSJSON: true


steps:
- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'

- script: |
    echo Downloading Mend Unified Agent
    curl -LJO https://unified-agent.s3.amazonaws.com/wss-unified-agent.jar
    echo Mend Unified Agent downloaded successfully
    if [[ "$(curl -sL https://unified-agent.s3.amazonaws.com/wss-unified-agent.jar.sha256)" != "$(sha256sum wss-unified-agent.jar)" ]] ; then
      echo "Integrity Check Failed"
    else
      echo "Integrity Check Passed"
    fi
  displayName: 'Mend Unified Agent Scan'
  env:
    WS_APIKEY: $(APIKEY)
    WS_USERKEY: $(USERKEY)

- script: |
    curl -LJO https://raw.githubusercontent.com/mend-toolkit/mend-examples/main/Scripts/check-project-state.sh
    chmod +x ./check-project-state.sh && ./check-project-state.sh
  displayName: 'Mend Check Project State'
  env:
    WS_APIKEY: $(APIKEY)
    WS_USERKEY: $(USERKEY)

- script: |
    export WS_PROJECTTOKEN=$(jq -r '.projects | .[] | .projectToken' ./whitesource/scanProjectDetails.json)
    pip install ws-sbom-generator
    ws_sbom_generator -u $WS_USERKEY -k $WS_APIKEY -s $WS_PROJECTTOKEN -a $WS_URL -t tv -o ./whitesource
  displayName: 'Mend Generate SBOM'
  env:
    WS_APIKEY: $(APIKEY)
    WS_USERKEY: $(USERKEY)

- script: |
    export WS_PROJECTTOKEN=$(jq -r '.projects | .[] | .projectToken' ./whitesource/scanProjectDetails.json)
    curl --output ./whitesource/riskreport.pdf --request POST $WS_URL'/api/v1.3' -H 'Content-Type: application/json'  --data-raw '{"requestType":"getProjectRiskReport","userKey":"'$WS_USERKEY'","projectToken":"'$WS_PROJECTTOKEN'"}'
  displayName: 'Mend Generate Risk Report'
  env:
    WS_APIKEY: $(APIKEY)
    WS_USERKEY: $(USERKEY)
    WS_FILESYSTEMSCAN: false

- publish: $(System.DefaultWorkingDirectory)/whitesource
  artifact: Whitesource
  displayName: Publish Mend Logs